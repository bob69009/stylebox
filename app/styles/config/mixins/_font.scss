////
/// @group config
/// @author Arthur Masson
////

/// REM mixin: return almost any css property with rem units (base 10px)
/// @param {string} css property
/// @param {list} size values
/// @example scss - rem mixin
///   rem(margin, 0px 12px);
///   // margin: 0 1.2rem
/// @author Hugo Giraudel
/// @link http://hugogiraudel.com/2013/03/18/ultimate-rem-mixin/
@mixin rem($property, $values) {
  $px : ();
  $rem: ();

  @each $value in $values {

    @if $value == 0 or $value == auto {
      $px : append($px , $value);
      $rem: append($rem, $value);
    }

    @else {
      $unit: unit($value);
      $val: parseInt($value);

      @if $unit == "px" {
        $px : append($px,  $value);
        $rem: append($rem, ($val / 10 + rem));
      }

      @if $unit == "rem" {
        $px : append($px,  ($val * 10 + px));
        $rem: append($rem, $value);
      }
    }
  }

  @if $px == $rem {
    #{$property}: $px;
  } @else {
    #{$property}: $px;
    #{$property}: $rem;
  }
}